@page
@model school_management_system.Pages.Teacher.Attendance.IndexModel
@{
    Layout = "_TeacherLayout";
    ViewData["Title"] = "Teacher-Attendance";
}

<main class="main-content">
    <header class="header">
        <div>
            <h1>Attendance Management</h1>
            <p class="text-gray-600">Track and manage student attendance</p>
        </div>

        <div class="header-actions">
            <form method="get" class="d-flex" style="gap:0.5rem;">
                <select asp-for="SelectedGroupId"
                        asp-items="@(new SelectList(Model.Groups, "Id", "Name"))"
                        class="class-selector">
                    <option value="">-- Select Group --</option>
                </select>
                <select asp-for="SelectedSubjectId" 
                        asp-items="@(new SelectList(Model.Subjects, "Id", "Name"))"
                        class="subject-selector">
                    <option value="">-- Select Subject --</option>
                </select>
                <button type="submit" class="btn btn-primary">Show Students</button>
            </form>
        </div>
    </header>

    @if (Model.SelectedGroupId != null && Model.Students.Any())
    {
        <div class="attendance-overview">
            <div class="card">
                <div class="card-header">
                    <h3>Today's Attendance - @Model.Groups.FirstOrDefault(g => g.Id == Model.SelectedGroupId)?.Name</h3>
                    <span class="date">@DateTime.Today.ToString("MMMM dd, yyyy")</span>
                </div>
                <div class="attendance-stats">
                    <div class="stat-item present">
                        <span class="stat-number">@Model.PresentCount</span>
                        <div class="stat-label">Present</div>
                    </div>
                    <div class="stat-item absent">
                        <span class="stat-number">@Model.AbsentCount</span>
                        <div class="stat-label">Absent</div>
                    </div>
                    <div class="stat-item late">
                        <span class="stat-number">@Model.LateCount</span>
                        <div class="stat-label">Late</div>
                    </div>
                    <div class="stat-item total">
                        <span class="stat-number">@Model.TotalCount</span>
                        <div class="stat-label">Total</div>
                    </div>
                </div>
            </div>
        </div>

        <div class="attendance-list">
            <form method="post" asp-page-handler="SaveAttendance">
                <input type="hidden" asp-for="SelectedGroupId" />
                <input type="hidden" asp-for="SelectedSubjectId" />
                <div class="card">
                    <div class="card-header">
                        <h3>Student List</h3>
                        <div class="attendance-actions">
                            <button type="button" class="btn btn-success" onclick="markAll('Present')">Mark All Present</button>
                            <button type="submit" class="btn btn-secondary">Save Attendance</button>
                        </div>
                    </div>

                    <div class="students-grid">
                        @for (int i = 0; i < Model.Students.Count; i++)
                        {
                            var student = Model.Students[i];
                            <div class="student-card">
                                <img src="@Url.Content($"~/uploads/student pics/{student.Id}.jpg")" alt="@($"{student.FirstName} {student.LastName}")" />
                                <div class="student-info">
                                    <h4>@student.FirstName @student.LastName</h4>
                                </div>
                                <div class="attendance-buttons">
                                    <button type="button" class="attendance-btn present" onclick="markStatus(@i, 'Present', this)">P</button>
                                    <button type="button" class="attendance-btn absent" onclick="markStatus(@i, 'Absent', this)">A</button>
                                    <button type="button" class="attendance-btn late" onclick="markStatus(@i, 'Late', this)">L</button>
                                </div>
                                <!-- Bind to StudentsAttendance -->
                                <input type="hidden" name="StudentsAttendance[@i].StudentId" value="@student.Id" />
                                <input type="hidden" name="StudentsAttendance[@i].Status" id="attendance-@i" value="" />
                            </div>
                        }
                    </div>
                </div>
            </form>
        </div>
    }
    else if (Model.SelectedGroupId != null)
    {
    }
</main>
@section Styles {
    <link rel="stylesheet" href="/css/teacher-css/teacher.css" />
    <link rel="stylesheet" href="/css/teacher-css/attendance.css">
    <link rel="stylesheet" href="/css/shared-css/css/reset.css">
    <link rel="stylesheet" href="/css/shared-css/typography.css">
    <link rel="stylesheet" href="/css/shared-css/components.css">
    <link rel="stylesheet" href="/css/shared-css/layout.css">
}
@section Scripts {
        <script>
        function markStatus(index, status, btn) {
            // Update hidden input
            document.getElementById('attendance-' + index).value = status;
            btn.parentElement.querySelectorAll('.attendance-btn').forEach(b => b.classList.remove('active'));
            btn.classList.add('active');

            // Remove active class from all buttons in the same student card
            const buttons = btn.parentElement.querySelectorAll('.attendance-btn');
            buttons.forEach(b => b.classList.remove('active'));

            // Add active class to clicked button
            btn.classList.add('active');
        }

        function markAll(status) {
            // Loop all student cards
            document.querySelectorAll('.student-card').forEach((card, i) => {
                const input = card.querySelector('input[type="hidden"][id^="attendance-"]');
                const buttons = card.querySelectorAll('.attendance-btn');

                // Update hidden input
                input.value = status;

                // Remove active class from all buttons
                buttons.forEach(b => b.classList.remove('active'));

                // Add active class to the button matching the status
                const btn = card.querySelector(`.attendance-btn.${status.toLowerCase()}`);
                if (btn) btn.classList.add('active');
            });
        }
    </script>
}