@page
@model school_management_system.Pages.Admin.Users.IndexModel
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Admin-User";
}
<main class="main-content">
    <header class="header">
        <div>
            <h1>User Management</h1>
            <p class="text-gray-600">Manage teachers, students, and parents</p>
        </div>
        <div class="header-actions">
            <button class="btn btn-secondary" onclick="exportUsers()">Export</button>
            @* <a role = "Button" class="btn btn-primary" asp-page = "CreateUser">Add User</a> *@
        </div>
    </header>

    <!-- Filters -->
    <div class="filters-section">
        <div class="card">
            <div class="filters-grid">
                <div class="filter-group">
                    <label>Role</label>
                    <select id="roleFilter" onchange="filterUsers()">
                        <option value="">All Roles</option>
                        <option value="teacher">Teacher</option>
                        <option value="student">Student</option>
                        <option value="parent">Parent</option>
                    </select>
                </div>

                <div class="filter-group">
                    <label>Status</label>
                    <select id="statusFilter" onchange="filterUsers()">
                        <option value="">All Status</option>
                        <option value="active">Active</option>
                        <option value="inactive">Inactive</option>
                    </select>
                </div>

                <div class="filter-group">
                    <label>Search</label>
                    <input type="text" id="searchInput" placeholder="Search users..." oninput="filterUsers()">
                </div>

                <div class="filter-group">
                    <label>&nbsp;</label>
                    <button class="btn btn-secondary" onclick="clearFilters()">Clear Filters</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Users Table -->
    <div class="table-container">
        <table class="table">
            <thead>
                <tr>
                    <th>User</th>
                    <th>Role</th>
                    <th>Personal Email</th>
                    <th>Status</th>
                    <th>Joined</th>
                    <th>School Email</th>
                    <th>Password</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="usersTableBody">
                <!-- Users will be populated -->
                @if(Model.Teachers.Count()>0 )
                {
                    foreach(var teacher in Model.Teachers)
                    {
                        <tr>
                            <td>
                                <div class="font-medium">
                                    <p>@teacher.FirstName @teacher.LastName</p>
                                </div>
                            </td>
                            <td>
                                <div class="user-info">
                                    <div class="font-medium">Teacher</div>
                                </div>
                            </td>
                            <td>@teacher.Email</td>
                            <td><span class="status-active">active</span></td>
                            <td>
                                @teacher.HireDate
                            </td>
                            <td>
                                @foreach (var user in Model.Users)
                                {
                                    if(teacher.UserId == user.Id)
                                    {
                                        @user.UserName
                                    }
                                }
                            </td>
                            <td>
                                @Model.Password                           
                            </td>
                            <td>
                                <div class="actions">
                                    <button class="btn btn-sm btn-secondary" >Edit</button>
                                    <button class="btn btn-sm btn-warning" >Deactivate</button>
                                </div>
                            </td>
                        </tr>

                    }
                }
                @if(Model.Students.Count()>0 )
                {
                    foreach(var student in Model.Students)
                    {
                        <tr>
                            <td>
                                <div class="font-medium">
                                    <p>@student.FirstName @student.LastName</p>
                                </div>
                            </td>
                            <td>
                                <div class="user-info">
                                    <div class="font-medium">Student</div>
                                </div>
                            </td>
                            <td>@student.Email</td>
                            <td><span class="status-@student.Status">@student.Status</span></td>
                            <td>
                                @student.StartDate
                            </td>
                            <td>
                                @foreach(var user in Model.Users)
                                {
                                    if(student.UserId == user.Id)
                                    {
                                        @user.UserName
                                    }
                                }
                            </td>
                            <td>
                                @Model.Password                           
                            </td>
                            <td>
                                <div class="actions">
                                    <button class="btn btn-sm btn-secondary" >Edit</button>
                                    <button class="btn btn-sm btn-warning" >Deactivate</button>
                                </div>
                            </td>
                        </tr>
                        
                    }
                }
            </tbody>
        </table>
    </div>
</main>
@section Styles {
                <link rel="stylesheet" href="/css/admin-css/admin.css" />
                <link rel="stylesheet" href="/css/shared-css/css/reset.css">
                <link rel="stylesheet" href="/css/shared-css/typography.css">
                <link rel="stylesheet" href="/css/shared-css/components.css">
                <link rel="stylesheet" href="/css/shared-css/layout.css">
}
@section Scripts {
        <script>
            function filterUsers() {
                const roleFilter = document.getElementById("roleFilter").value.toLowerCase();
                const statusFilter = document.getElementById("statusFilter").value.toLowerCase();
                const searchInput = document.getElementById("searchInput").value.toLowerCase();
                const tableBody = document.getElementById("usersTableBody");
                const rows = tableBody.getElementsByTagName("tr");

                for (let row of rows) {
                    const cells = row.getElementsByTagName("td");
                    if (!cells.length) continue;

                    const fullName = (cells[0]?.innerText || "").toLowerCase();
                    const role = (cells[1]?.innerText || "").toLowerCase();
                    const email = (cells[2]?.innerText || "").toLowerCase();
                    const status = (cells[3]?.innerText || "").toLowerCase();

                    const matchesRole = roleFilter === "" || role === roleFilter;
                    const matchesStatus = statusFilter === "" || status === statusFilter;
                    const matchesSearch =
                        searchInput === "" ||
                        fullName.includes(searchInput) ||
                        email.includes(searchInput) ||
                        role.includes(searchInput) ||
                        status.includes(searchInput);

                    row.style.display = matchesRole && matchesStatus && matchesSearch ? "" : "none";
                }
            }

            function clearFilters() {
                document.getElementById("roleFilter").value = "";
                document.getElementById("statusFilter").value = "";
                document.getElementById("searchInput").value = "";
                filterUsers();  
            }

        </script>

}